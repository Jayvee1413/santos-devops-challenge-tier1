{
  "Resources": {
    "JVSANTOSTier1VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1VPCAwsArchitectureStack/JVSANTOSTier1VPC"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "0", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Public"
          },
          {
            "Key": "subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "JVSantosTier1PublicSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PublicSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1"
        }
      },
    },
    "JVSANTOSTier1VPCPublicSubnet1DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "JVSANTOSTier1VPCIGW"
        }
      },
      "DependsOn": [
        "JVSANTOSTier1VPCVPCGW"
      ],
    },
    "JVSANTOSTier1VPCPublicSubnet1EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PublicSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet1NATGateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "JVSANTOSTier1VPCPublicSubnet1EIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PublicSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.16.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "1", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Public"
          },
          {
            "Key": "subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PublicSubnet2"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PublicSubnet2"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet2"
        }
      },
    },
    "JVSANTOSTier1VPCPublicSubnet2DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet2RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "JVSANTOSTier1VPCIGW"
        }
      },
      "DependsOn": [
        "JVSANTOSTier1VPCVPCGW"
      ],
    },
    "JVSANTOSTier1VPCPublicSubnet3Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "2", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Public"
          },
          {
            "Key": "subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PublicSubnet3"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PublicSubnet3"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPublicSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet3Subnet"
        }
      },
    },
    "JVSANTOSTier1VPCPublicSubnet3DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet3RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "JVSANTOSTier1VPCIGW"
        }
      },
      "DependsOn": [
        "JVSANTOSTier1VPCVPCGW"
      ],
    },
    "JVSANTOSTier1VPCIsolatedSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.48.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "0", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1IsolatedSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1IsolatedSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet1"
        }
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "1", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1IsolatedSubnet2"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1IsolatedSubnet2"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet2"
        }
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.80.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "2", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1IsolatedSubnet3"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1IsolatedSubnet3"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCIsolatedSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet3"
        }
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "0", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Private"
          },
          {
            "Key": "subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PrivateSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PrivateSubnet1"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet1"
        }
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet1DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet1RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1NATGateway"
        }
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "1", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Private"
          },
          {
            "Key": "subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PrivateSubnet2"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PrivateSubnet2"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet2"
        }
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet2DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet2RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1NATGateway"
        }
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [ 
              "2", 
              { 
                "Fn::GetAZs" : "" 
              } 
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "subnet-name",
            "Value": "Private"
          },
          {
            "Key": "subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PrivateSubnet3"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1PrivateSubnet3"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet3"
        }
      },
    },
    "JVSANTOSTier1VPCPrivateSubnet3DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet3RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1NATGateway"
        }
      },
    },
    "JVSANTOSTier1VPCIGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier1VPCAwsArchitectureStack/JVSANTOSTier1VPC"
          }
        ]
      },
    },
    "JVSANTOSTier1VPCVPCGW": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "InternetGatewayId": {
          "Ref": "JVSANTOSTier1VPCIGW"
        }
      },
    },
    "JVSANTOSpublicnetworkacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ]
      },
    },
    "JVSANTOSpublicnaclhttpportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 80,
          "To": 80
        }
      },
    },
    "JVSANTOSpublicnaclhttpsportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      },
    },
    "JVSANTOSpublicnaclsshportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "DENY",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 22,
          "To": 22
        }
      },
    },
    "JVSANTOSpublicnaclephemeralportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 230,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      },
    },
    "JVSANTOSpublicnaclhttpportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 80,
          "To": 80
        }
      },
    },
    "JVSANTOSpublicnaclhttpsportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      },
    },
    "JVSANTOSpublicnaclephemeralportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      },
    },
    "JVSANTOSpublicnaclsshportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 230,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 22,
          "To": 22
        }
      },
    },
    "JVSANTOSpublicnaclsubnetassoc0": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet1"
        }
      },
    },
    "JVSANTOSpublicnaclsubnetassoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet2"
        }
      },
    },
    "JVSANTOSpublicnaclsubnetassoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSpublicnetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPublicSubnet3Subnet"
        }
      },
    },
    "JVSANTOSprivatenetworkacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ]
      },
    },
    "JVSANTOSprivatenaclallportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": {
          "Fn::GetAtt": [
            "JVSANTOSTier1VPC",
            "CidrBlock"
          ]
        },
        "Egress": false,
        "PortRange": {
          "From": 0,
          "To": 65535
        }
      },
    },
    "JVSANTOSprivatenaclallportoutsideinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      },
    },
    "JVSANTOSprivatenaclhttpsportoutsideinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      },
    },
    "JVSANTOSprivatenaclallportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": {
          "Fn::GetAtt": [
            "JVSANTOSTier1VPC",
            "CidrBlock"
          ]
        },
        "Egress": true,
        "PortRange": {
          "From": 0,
          "To": 65535
        }
      },
    },
    "JVSANTOSprivatenaclallportoutsideoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "Protocol": -1,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 0,
          "To": 65535
        }
      },
    },
    "JVSANTOSprivatenaclhttpsportoutsideoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      },
    },
    "JVSANTOSprivatenaclsubnetassoc0": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet1"
        }
      },
    },
    "JVSANTOSprivatenaclsubnetassoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet2"
        }
      },
    },
    "JVSANTOSprivatenaclsubnetassoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSprivatenetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCPrivateSubnet3"
        }
      },
    },
    "JVSANTOSisolatednetworkacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ]
      },
    },
    "JVSANTOSisolatednaclrdsportinbound1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 100,
        "CidrBlock": "10.0.96.0/19",
        "Egress": false,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      },
    },
    "JVSANTOSisolatednaclrdsportoutbound1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 100,
        "CidrBlock": "10.0.96.0/19",
        "Egress": true,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      },
    },
    "JVSANTOSisolatednaclephemeralportoutbound1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 110,
        "CidrBlock": "10.0.96.0/19",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      },
    },
    "JVSANTOSisolatednaclrdsportinbound2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 110,
        "CidrBlock": "10.0.128.0/19",
        "Egress": false,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      },
    },
    "JVSANTOSisolatednaclrdsportoutbound2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 120,
        "CidrBlock": "10.0.128.0/19",
        "Egress": true,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      },
    },
    "JVSANTOSisolatednaclephemeralportoutbound2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 130,
        "CidrBlock": "10.0.128.0/19",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      },
    },
    "JVSANTOSisolatednaclrdsportinbound3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 120,
        "CidrBlock": "10.0.160.0/19",
        "Egress": false,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      },
    },
    "JVSANTOSisolatednaclrdsportoutbound3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 140,
        "CidrBlock": "10.0.160.0/19",
        "Egress": true,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      },
    },
    "JVSANTOSisolatednaclephemeralportoutbound3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 150,
        "CidrBlock": "10.0.160.0/19",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      },
    },
    "JVSANTOSisolatednaclsubnetassoc0": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet1"
        }
      },
    },
    "JVSANTOSisolatednaclsubnetassoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet2"
        }
      },
    },
    "JVSANTOSisolatednaclsubnetassoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "JVSANTOSisolatednetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier1VPCIsolatedSubnet3"
        }
      },
    },
    "JVSANTOSCodeStarConnection": {
      "Type": "AWS::CodeStarConnections::Connection",
      "Properties": {
        "ConnectionName": "jvsantos",
        "ProviderType": "GitHub",
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ]
      },
    },
    "JVSANTOSBeanstalkApplicationLoadBalancerSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Application Load Balancer Security Group",
        "GroupName": "JVSANTOSBeanstalkApplicationLoadBalancerSG",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTPS from outside",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ],
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        }
      },
    },
    "JVSANTOSBeanstalkApplicationSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Beanstalk Application Security Group",
        "GroupName": "JVSANTOSBeanstalkApplicationSG",
        "SecurityGroupEgress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "JVSANTOSTier1VPC",
                "CidrBlock"
              ]
            },
            "Description": "Outbound Rule for VPC",
            "FromPort": 1024,
            "IpProtocol": "tcp",
            "ToPort": 65535
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ],
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        }
      },
    },
    "JVSANTOSBeanstalkApplicationSGfromJVSANTOSBeanstalkApplicationLoadBalancerSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Allow HTTPS from load balancer",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "JVSANTOSBeanstalkApplicationSG",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "JVSANTOSBeanstalkApplicationLoadBalancerSG",
            "GroupId"
          ]
        },
        "ToPort": 443
      },
    },
    "JVSANTOSBeanstalkApplicationSGfromJVSANTOSBeanstalkApplicationLoadBalancerSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Allow HTTP from load balancer",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "JVSANTOSBeanstalkApplicationSG",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "JVSANTOSBeanstalkApplicationLoadBalancerSG",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
    },
    "JVSANTOSRDSSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS MySQL Security Group",
        "GroupName": "JVSANTOSRDSSG",
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ],
        "VpcId": {
          "Ref": "JVSANTOSTier1VPC"
        }
      },
    },
    "JVSANTOSRDSSGfromJVSANTOSBeanstalkApplicationSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Allow MySQL from app",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "JVSANTOSRDSSG",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "JVSANTOSBeanstalkApplicationSG",
            "GroupId"
          ]
        },
        "ToPort": 3306
      },
    },
    "JVSANTOSRDSSGtoJVSANTOSBeanstalkApplicationSG": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "JVSANTOSRDSSG",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Outbound Rule for VPC",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "JVSANTOSBeanstalkApplicationSG",
            "GroupId"
          ]
        },
        "FromPort": 1024,
        "ToPort": 65535
      },
    },
    "JVSANTOSTier1RDSSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\"username\":\"tier1user\"}"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ]
      },
    },
    "JVSANTOSTier1RDSSecretAttachment": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "JVSANTOSTier1RDSSecret"
        },
        "TargetId": {
          "Ref": "JVSANTOSTier1RDS"
        },
        "TargetType": "AWS::RDS::DBInstance"
      },
    },
    "JVSANTOSTier1RDSSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for JVSANTOSTier1RDS database",
        "SubnetIds": [
          {
            "Ref": "JVSANTOSTier1VPCIsolatedSubnet1"
          },
          {
            "Ref": "JVSANTOSTier1VPCIsolatedSubnet2"
          },
          {
            "Ref": "JVSANTOSTier1VPCIsolatedSubnet3"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ]
      },
    },
    "JVSANTOSTier1RDS": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.t3.micro",
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceIdentifier": "jvsantostier1rds",
        "DBName": "tier1",
        "DBSubnetGroupName": {
          "Ref": "JVSANTOSTier1RDSSubnetGroup"
        },
        "DeletionProtection": false,
        "Engine": "mysql",
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "JVSANTOSTier1RDSSecret"
              },
              ":SecretString:username::}}"
            ]
          ]
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "JVSANTOSTier1RDSSecret"
              },
              ":SecretString:password::}}"
            ]
          ]
        },
        "MultiAZ": true,
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ],
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "JVSANTOSRDSSG",
              "GroupId"
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
    },
    "JVSANTOSTier1ACMCertificate": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": "jvsantos-tier1.apperdevops.com",
        "DomainValidationOptions": [
          {
            "DomainName": "jvsantos-tier1.apperdevops.com",
            "HostedZoneId": "Z04135332RXQPQVNH7G61"
          }
        ],
        "SubjectAlternativeNames": [
          "*.jvsantos-tier1.apperdevops.com"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier1"
          }
        ],
        "ValidationMethod": "DNS"
      },
    },
  },
  "Outputs": {
    "OutputJVSANTOSTier1VPC": {
      "Value": {
        "Ref": "JVSANTOSTier1VPC"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPC"
      }
    },
    "OutputJVSANTOSTier1VPCPrivateSubnet1": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCPrivateSubnet1"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCPrivateSubnet1"
      }
    },
    "OutputJVSANTOSTier1VPCPrivateSubnet2": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCPrivateSubnet2"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCPrivateSubnet2"
      }
    },
    "OutputJVSANTOSTier1VPCPrivateSubnet3": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCPrivateSubnet3"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCPrivateSubnet3"
      }
    },
    "OutputJVSANTOSTier1VPCPublicSubnet1": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCPublicSubnet1"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCPublicSubnet1"
      }
    },
    "OutputJVSANTOSTier1VPCPublicSubnet2": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCPublicSubnet2"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCPublicSubnet2"
      }
    },
    "OutputJVSANTOSTier1VPCPublicSubnet3": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCPublicSubnet3Subnet"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCPublicSubnet3"
      }
    },
    "OutputJVSANTOSTier1VPCIsolatedSubnet1": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCIsolatedSubnet1"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCIsolatedSubnet1"
      }
    },
    "OutputJVSANTOSTier1VPCIsolatedSubnet2": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCIsolatedSubnet2"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCIsolatedSubnet2"
      }
    },
    "OutputJVSANTOSTier1VPCIsolatedSubnet3": {
      "Value": {
        "Ref": "JVSANTOSTier1VPCIsolatedSubnet3"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1VPCIsolatedSubnet3"
      }
    },
    "OutputJVSANTOSBeanstalkApplicationSGGroupId": {
      "Value": {
        "Fn::GetAtt": [
          "JVSANTOSBeanstalkApplicationSG",
          "GroupId"
        ]
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSBeanstalkApplicationSGGroupId"
      }
    },
    "OutputJVSANTOSBeanstalkApplicationLoadBalancerSGGroupId": {
      "Value": {
        "Fn::GetAtt": [
          "JVSANTOSBeanstalkApplicationLoadBalancerSG",
          "GroupId"
        ]
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSBeanstalkApplicationLoadBalancerSGGroupId"
      }
    },
    "OutputJVSANTOSTier1ACMCertificate": {
      "Value": {
        "Ref": "JVSANTOSTier1ACMCertificate"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1ACMCertificate"
      }
    },
    "OutputJVSANTOSTier1RDSSecret": {
      "Value": {
        "Ref": "JVSANTOSTier1RDSSecret"
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:OutputJVSANTOSTier1RDSSecret"
      }
    },
    "JVSANTOSCodeStarConnectionConnectionArn": {
      "Value": {
        "Fn::GetAtt": [
          "JVSANTOSCodeStarConnection",
          "ConnectionArn"
        ]
      },
      "Export": {
        "Name": "JVSANTOSTier1VPCAwsArchitectureStack:JVSANTOSCodeStarConnectionConnectionArn"
      }
    }
  }
}